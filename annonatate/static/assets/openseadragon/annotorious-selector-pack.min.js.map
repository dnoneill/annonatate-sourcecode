{"version":3,"sources":["webpack://Annotorious.SelectorPack/webpack/universalModuleDefinition","webpack://Annotorious.SelectorPack/webpack/bootstrap","webpack://Annotorious.SelectorPack/./node_modules/tiny-emitter/index.js","webpack://Annotorious.SelectorPack/./node_modules/fast-deep-equal/index.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/WebAnnotation.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/Selection.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/Tool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/SVG.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/selectors/EmbeddedSVG.js","webpack://Annotorious.SelectorPack/./src/circle/Circle.js","webpack://Annotorious.SelectorPack/./src/circle/CircleMask.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircle.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/EditableShape.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Formatting.js","webpack://Annotorious.SelectorPack/./src/circle/EditableCircle.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircleTool.js","webpack://Annotorious.SelectorPack/./src/ellipse/Ellipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EllipseMask.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EditableEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipseTool.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/EditableFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehandTool.js","webpack://Annotorious.SelectorPack/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","E","on","callback","ctx","e","this","push","fn","once","self","listener","off","apply","arguments","_","emit","data","slice","evtArr","len","length","evts","liveEvents","TinyEmitter","equal","a","b","constructor","keys","Array","isArray","RegExp","source","flags","valueOf","toString","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","substr","stringify","arr","offset","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","WebAnnotation","annotation","opts","opt_props","opt_opts","underlying","type","target","selector","find","other","id","equals","readOnly","motivation","body","bodies","exact","start","end","args","stub","Selection","cloned","JSON","parse","assign","IMPLEMENTATION_MISSING","Tool","g","config","env","evt","bbox","svg","getBoundingClientRect","x","clientX","y","clientY","pt","createSVGPoint","left","top","matrixTransform","getScreenCTM","inverse","mouseMove","mouseUp","dblClick","getSVGPoint","started","addEventListener","document","removeEventListener","startDrawing","closest","EventEmitter","supports","SVG_NAMESPACE","getClassNames","el","attr","getAttribute","Set","split","addClass","className","classNames","add","setAttribute","from","join","sanitize","doc","cleanEl","attributes","forEach","startsWith","removeAttribute","scripts","getElementsByTagName","reverse","parentNode","removeChild","querySelectorAll","svgFragmentToShape","originalDoc","namespaced","parser","DOMParser","parseFromString","isPrefixDeclared","lookupPrefix","isDefaultNamespaceSVG","lookupNamespaceURI","firstChild","XMLSerializer","serializeToString","documentElement","replace","drawEmbeddedSVG","shape","createElementNS","inner","cloneNode","outer","appendChild","toSVGTarget","image","querySelector","serialized","outerHTML","src","setXYR","setCircleSize","cx","cy","innerCircle","outerCircle","getCircleSize","parseFloat","CircleMask","imageDimensions","circle","ty","mask","w","h","naturalWidth","naturalHeight","RubberbandCircle","anchorX","anchorY","oppositeX","oppositeY","group","style","display","anchor","Math","max","pow","redraw","drawCircle","Mask","pointerEvents","element","EditableShape","ResizeObserver","resizeObserver","svgBounds","viewBox","baseVal","width","height","scale","scaleHandles","observe","containerGroup","radius","handleRadius","handle","handles","Element","HTMLDocument","enableResponsive","disconnect","appendFormatterEl","formatterEl","getBBox","svgEl","append","format","formatter","String","nodeType","Node","ELEMENT_NODE","setFormatterElSize","EditableCircle","elementGroup","topleft","topright","bottomright","bottomleft","setHandleXY","draggedHandleIdx","anchorHandle","mousePos","getHandleXY","mouseX","mouseY","abs","idx0","idx2","idx3","idx1","grabbedElem","pos","grabbedAt","constrain","coord","setSize","handleIdx","indexOf","oppositeHandle","stretchCorners","onMouseMove","onMouseUp","onGrab","map","drawHandle","RubberbandCircleTool","attachListeners","rubberband","destroy","dragTo","detachListeners","minWidth","minSelectionWidth","minHeight","minSelectionHeight","toSelection","stop","identifier","match","rx","ry","setEllipseSize","innerEllipse","outerEllipse","getEllipseSize","EllipseMask","ellipse","RubberbandEllipse","drawEllipse","EditableEllipse","leftHandle","anchorLeft","RubberbandEllipseTool","RubberbandFreehand","points","str","substring","xy","addPoint","setPoints","freehand","EditableFreehand","round","num","delta","dx","dy","updatedPoints","pointList","point","trim","getPoints","RubberbandFreehandTool","_isDrawing","onDblClick","SelectorPack","anno","addDrawingTool"],"mappings":"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","file":"annotorious-selector-pack.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SelectorPack\"] = factory();\n\telse\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\nexport default class WebAnnotation {\n\n  constructor(annotation, opts) {\n    this.underlying = annotation;\n    this.opts = opts;\n  }\n\n  /** For convenience - creates an empty web annotation **/\n  static create = args => {\n    const stub = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`,\n      'body': []\n    };\n\n    return new WebAnnotation({ ...stub, ...args });\n  }\n\n  /** Creates a copy of this annotation **/\n  clone = (opt_props, opt_opts) => {\n    return new WebAnnotation({ ...this.underlying, ...opt_props}, { ...this.opts, ...opt_opts });\n  }\n\n  /** An equality check based on the underlying object **/\n  isEqual(other) {\n    if (other?.type !== 'Annotation') {\n      return false;\n    } else if (this.underlying === other.underlying) {\n      return true;\n    } else if (!this.underlying.id || !other.underlying.id) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get readOnly() {\n    return this.opts?.readOnly;\n  }\n\n  /*************************************/ \n  /* Getters to forward properties of  */\n  /* the underlying annotation         */\n  /*************************************/\n\n  get id() {\n    return this.underlying.id; \n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get motivation() {\n    return this.underlying.motivation;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  /** Same as .body, but guaranteed to return an array **/\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  /** Only bodies are meant to be mutated by the application **/\n  set bodies(bodies) {\n    this.underlying.body = bodies;\n  }\n\n  /** Same as .target, but guaranteed to return an array **/\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n  \n  /*****************************************/ \n  /* Various access helpers and shorthands */\n  /*****************************************/\n\n  /** Selector of the given type **/\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /** Shorthand for the 'start' field of the TextPositionSelector **/\n  get start() {\n    return this.selector('TextPositionSelector').start;\n  }\n\n  /** Shorthand for the 'end' field of the TextPositionSelector **/\n  get end() {\n    return this.selector('TextPositionSelector').end;\n  }\n  \n}\n","import WebAnnotation from './WebAnnotation';\nimport { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\n/**\n * An \"annotation in draft mode\". Really the same\n * data structure, but as a separate class so we can\n * tell things apart properly.\n */\nexport default class Selection {\n\n  constructor(target, body) {\n    this.underlying = {\n      type: 'Selection',\n      body: body || [],\n      target\n    }\n  }\n\n  /** Creates a copy of this selection **/\n  clone = opt_props => {\n    // Deep-clone\n    const cloned = new Selection();\n    cloned.underlying = JSON.parse(JSON.stringify(this.underlying));  \n\n    if (opt_props)\n      cloned.underlying = { ...cloned.underlying, ...opt_props };\n\n    return cloned;\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /** For consistency with WebAnnotation **/\n  isEqual(other) {\n    if (!other) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n  \n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /*******************************************/ \n  /* Selection-specific properties & methods */\n  /*******************************************/\n\n  get isSelection() {\n    return true;\n  }\n\n  toAnnotation = () => {\n    const a = Object.assign({}, this.underlying, {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`\n    });\n\n    return new WebAnnotation(a);\n  }\n\n}","import EventEmitter from 'tiny-emitter';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\n/**\n * Base class that adds some convenience stuff for tool plugins.\n */\nexport default class Tool extends EventEmitter {\n\n  constructor(g, config, env) {\n    super();\n\n    // Annotationlayer SVG element\n    this.svg = g.closest('svg');\n    \n    // SVG group holding all the a9s contents.\n    // In AnnotoriousOSD, this is the element the \n    // transoform gets applied to.\n    this.g = g;\n\n    this.config = config;\n    this.env = env;\n\n    // We'll keep a flag set to false until\n    // the user has started moving, so we can \n    // fire the startSelection event\n    this.started = false;\n  }\n\n  getSVGPoint = evt => {\n    const bbox = this.svg.getBoundingClientRect();\n\n    const x = evt.clientX - bbox.x;\n    const y = evt.clientY - bbox.y;\n\n    const pt = this.svg.createSVGPoint();\n\n    const { left, top } = this.svg.getBoundingClientRect();\n    pt.x = x + left;\n    pt.y = y + top;\n\n    return pt.matrixTransform(this.g.getScreenCTM().inverse());\n  }\n\n  attachListeners = ({ mouseMove, mouseUp, dblClick }) => {\n    // Handle SVG conversion on behalf of tool implementations\n    if (mouseMove) {\n      this.mouseMove = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n\n        if (!this.started) {\n          this.emit('startSelection', { x, y });\n          this.started = true;\n        }\n    \n        mouseMove(x, y, evt);\n      }\n\n      // Mouse move goes on SVG element\n      this.svg.addEventListener('mousemove', this.mouseMove);   \n    }\n\n    if (mouseUp) {\n      this.mouseUp = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n        mouseUp(x, y, evt);\n      }\n\n      // Mouse up goes on doc, so we capture events outside, too\n      document.addEventListener('mouseup', this.mouseUp);\n    }\n\n    if (dblClick) {\n      this.dblClick = evt => {\n        const { x , y } = this.getSVGPoint(evt);        \n        dblClick(x, y, evt);\n      }\n\n      this.svg.addEventListener('dblclick', this.dblClick);\n    }\n     \n  }\n\n  detachListeners = () => {\n    if (this.mouseMove)\n      this.svg.removeEventListener('mousemove', this.mouseMove);\n    \n    if (this.mouseUp)\n      document.removeEventListener('mouseup', this.mouseUp);\n\n    if (this.dblClick)\n      this.svg.removeEventListener('dblclick', this.dblClick);\n  }\n\n  start = evt => {\n    // Handle SVG conversion on behalf of tool implementations\n    const { x , y } = this.getSVGPoint(evt);\n    this.startDrawing(x, y, evt);\n  }\n\n  /** \n   * Tool implementations MUST override these\n   */\n\n  get isDrawing() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  startDrawing = evt => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  createEditableShape = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  } \n\n}\n\n// In addition, Tool implementations need to implement the following static methods\n\n// Tool.identifier = '...'\n\nTool.supports = annotation => {\n  throw new Error(IMPLEMENTATION_MISSING);\n}\n\n// Just some convenience shortcuts to client-core, for quicker \n// importing in plugins. (In a way, the intention is to make the \n// Tool class serve as a kind of mini-SDK).\nexport { default as Selection } from '@recogito/recogito-client-core/src/Selection';\nexport { default as WebAnnotation } from '@recogito/recogito-client-core/src/WebAnnotation';","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nconst getClassNames = el => {\n  const attr = el.getAttribute('class');\n  return attr ? new Set(attr.split(' ')) : new Set();\n}\n\n// IE11 doesn't support adding/removing classes to SVG elements except \n// via .setAttribute\nexport const addClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.add(className);\n  el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const removeClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.delete(className);\n\n  if (classNames.size === 0)\n    el.removeAttribute('class');\n  else\n    el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const hasClass = (el, className) =>\n  getClassNames(el).has(className);","import { SVG_NAMESPACE } from '../util/SVG';\n\n/** Helper that forces an un-namespaced node to SVG **/\nconst insertSVGNamespace = originalDoc => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n\nconst sanitize = doc => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  // Remove on... attributes\n  cleanEl(doc);\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\nexport const svgFragmentToShape = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector) {\n    const parser = new DOMParser();\n\n    // Parse the XML document, assuming SVG\n    const { value } = selector;\n    const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n    // SVG needs a namespace declaration - check if it's set or insert if not\n    const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n    const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\n      return sanitize(doc).firstChild;\n    } else {\n      return sanitize(insertSVGNamespace(doc)).firstChild;\n    }\n  }\n}\n\nexport const drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n\nexport const toSVGTarget = (shape, image) => {\n  const inner = shape.querySelector('.a9s-inner').cloneNode(true);\n  inner.removeAttribute('class');\n  inner.removeAttribute('xmlns');\n\n  let serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\n  serialized = serialized.replace(` xmlns=\"${SVG_NAMESPACE}\"`, '');\n\n  return {\n    source: image.src,\n    selector: {\n      type: \"SvgSelector\",\n      value: `<svg>${serialized}</svg>`\n    }\n  }\n}\n\nexport const svgArea = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  const nodeName = shape.nodeName.toLowerCase();\n\n  if (nodeName === 'polygon') \n    return polygonArea(shape);\n  else if (nodeName === 'circle')\n    return circleArea(shape);\n  else if (nodeName === 'ellipse')\n    return ellipseArea(shape);\n  else if (nodeName == 'path')\n    return pathArea(shape);\n  else\n    throw `Unsupported SVG shape type: ${nodeName}`;\n}\n\nconst polygonArea = polygon => {\n  const points = polygon.getAttribute('points')\n    .split(' ') // Split x/y tuples\n    .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n\n  let area = 0;\n  let j = points.length - 1;\n\n  for (let i=0; i < points.length; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i;\n  }\n\n  return Math.abs(0.5 * area);\n}\n\nconst circleArea = circle => {\n  const r = circle.getAttribute('r');\n  return r * r * Math.PI;\n}\n\nconst ellipseArea = ellipse => {\n  const rx = ellipse.getAttribute('rx');\n  const ry = ellipse.getAttribute('ry');\n  return rx * ry * Math.PI;\n}\n\nconst pathArea = path => {\n  const pointList = path.getAttribute('d').split('L');\n  let area = 0;\n\n  if(pointList.length > 1) {\n    var point = pointList[pointList.length - 1].trim().split(' ');\n    let lastX = parseFloat(point[0]);\n    let lastY = parseFloat(point[1]);\n\n    point = pointList[0].substring(1).trim().split(' ');\n    let x = parseFloat(point[0]);\n    let y = parseFloat(point[1]);\n    area += (lastX + x) * (lastY - y);\n    lastX = x;\n    lastY = y;\n\n    for (let i = 1; i < pointList.length; i++) {\n      point = pointList[i].trim().split(' ');\n      x = parseFloat(point[0]);\n      y = parseFloat(point[1]);\n      area += (lastX + x) * (lastY - y);\n      lastX = x;\n      lastY = y;\n    }\n  }\n\n  return Math.abs(0.5 * area);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\nconst setXYR = (shape, x, y, r) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', r);\n}\n\n/** \n * Draws an SVG circle, either from an annotation, or an\n * (cx, cy, r)-tuple.\n */\nexport const drawCircle = (cx, cy, r) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const outerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n  const innerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n  innerCircle.setAttribute('class', 'a9s-inner');\n  setXYR(innerCircle, cx, cy, r);\n\n  outerCircle.setAttribute('class', 'a9s-outer');\n  setXYR(outerCircle, cx, cy, r);\n\n  g.appendChild(outerCircle);\n  g.appendChild(innerCircle);\n\n  return g;\n}\n\nexport const setCircleSize = (g, cx, cy, r) => {\n  const innerCircle = g.querySelector('.a9s-inner');\n  const outerCircle = g.querySelector('.a9s-outer');\n  \n  setXYR(innerCircle, cx, cy, r);\n  setXYR(outerCircle, cx, cy, r);\n}\n\nexport const getCircleSize = g => {\n  const outerCircle = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerCircle.getAttribute('cx'));\n  const cy = parseFloat(outerCircle.getAttribute('cy'));\n  const r = parseFloat(outerCircle.getAttribute('r'));\n  \n  return { cx, cy, r };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getCircleSize } from './Circle';\n\nexport default class CircleMask {\n\n  constructor(imageDimensions, circle) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.circle = circle;\n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const ty = cy + r;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const ty = cy + r;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawCircle, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * A 'rubberband' selection tool for creating a circle by\n * clicking and dragging.\n */\nexport default class RubberbandCircle {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawCircle(anchorX, anchorY, 2);\n    this.circle.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.circle);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.circle);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.circle;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const r = Math.max(1, Math.pow(w ** 2 + h ** 2, 0.5) / 2); // Negative values\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.circle.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.circle = null;\n    this.group = null;\n  }\n\n}","import EventEmitter from 'tiny-emitter';\nimport { SVG_NAMESPACE } from '../util/SVG';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nexport default class EditableShape extends EventEmitter {\n\n  constructor(annotation, g, config, env) {\n    super();\n\n    this.annotation = annotation;\n\n    this.g = g;\n\n    this.config = config;\n    this.env = env;\n\n    this.svg = g.closest('svg');\n\n    // Implementations need to override the handles list\n    this.handles = [];\n\n    // Bit of a hack. If we are dealing with a 'real' image, we enable\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\n    // so we don't need responsive mode.\n    const { image } = env;\n    if (image instanceof Element || image instanceof HTMLDocument)\n      this.enableResponsive();\n  }\n\n  enableResponsive = () => {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        const svgBounds = this.svg.getBoundingClientRect();\n        const { width, height } = this.svg.viewBox.baseVal;\n\n        const scale = Math.max(\n          width / svgBounds.width,\n          height / svgBounds.height\n        );\n\n        this.scaleHandles(scale);\n      });\n      \n      this.resizeObserver.observe(this.svg.parentNode);\n    }\n  }\n\n  drawHandle = (x, y) => {\n    const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    containerGroup.setAttribute('class', 'a9s-handle');\n\n    const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    const drawCircle = r => {\n      const c = document.createElementNS(SVG_NAMESPACE, 'circle');\n      c.setAttribute('cx', x);\n      c.setAttribute('cy', y);\n      c.setAttribute('r', r);\n      return c;\n    }\n\n    const radius = this.config.handleRadius || 6;\n\n    const inner = drawCircle(radius);\n    inner.setAttribute('class', 'a9s-handle-inner')\n\n    const outer = drawCircle(radius + 1);\n    outer.setAttribute('class', 'a9s-handle-outer')\n\n    group.appendChild(outer);\n    group.appendChild(inner);\n\n    containerGroup.appendChild(group);\n    return containerGroup;\n  }\n\n  setHandleXY = (handle, x, y) => {\n    const inner = handle.querySelector('.a9s-handle-inner');\t\n    inner.setAttribute('cx', x);\t\n    inner.setAttribute('cy', y);\t\n\n    const outer = handle.querySelector('.a9s-handle-outer');\t\n    outer.setAttribute('cx', x);\t\n    outer.setAttribute('cy', y);\n  }\n\n  getHandleXY = handle => {\n    const outer = handle.querySelector('.a9s-handle-outer');\n    return {\n      x: parseFloat(outer.getAttribute('cx')),\n      y: parseFloat(outer.getAttribute('cy'))\n    }\n  }\n\n  scaleHandles = scale => {\n    this.handles.forEach(handle => {\n      const inner = handle.querySelector('.a9s-handle-inner');\n      const outer = handle.querySelector('.a9s-handle-outer');\n\n      const radius = scale * (this.config.handleRadius || 6);\n\n      inner.setAttribute('r', radius);\n      outer.setAttribute('r', radius);\n    });\n  }\n\n  getSVGPoint = evt => {\n    const bbox = this.svg.getBoundingClientRect();\n\n    const x = evt.clientX - bbox.x;\n    const y = evt.clientY- bbox.y;\n\n    const pt = this.svg.createSVGPoint();\n\n    const { left, top } = this.svg.getBoundingClientRect();\n    pt.x = x + left;\n    pt.y = y + top;\n\n    return pt.matrixTransform(this.g.getScreenCTM().inverse());\n  }\n\n  // Implementations MUST override theis method\n  get element() {\t\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  // Implementations can extend this (calling super)\n  destroy() {\n    if (this.resizeObserver)\n      this.resizeObserver.disconnect();\n    \n    this.resizeObserver = null;\n  }\n\n}","import { addClass, SVG_NAMESPACE } from './SVG';\n\nconst appendFormatterEl = (formatterEl, shape) => {\n  const { x, y, width, height } = shape.getBBox();\n\n  const svgEl = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svgEl.setAttribute('class', 'a9s-formatter-el');\n  svgEl.setAttribute('x', x);\n  svgEl.setAttribute('y', y);\n  svgEl.setAttribute('width', width);\n  svgEl.setAttribute('height', height);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.appendChild(formatterEl);y\n\n  svgEl.appendChild(g);\n  \n  shape.append(svgEl);\n}\n\n/**\n * A formatter is a user-defined function that takes an annotation as input,\n * and returns either a string, or an object. If a string is returned, this\n * will be appended to the annotation element CSS class list. Otherwise, the\n * object can have the following properties: \n * \n * - 'className' added to the CSS class list\n * - 'data-*' added as data attributes\n * - 'style' a list of CSS styles (in the form of a string) \n */\nexport const format = (shape, annotation, formatter) => {\n  // The formatter can be undefined\n  if (!formatter)\n    return shape;\n\n  const format = formatter(annotation);\n\n  // The formatter is allowed to return null\n  if (!format)\n    return shape;\n\n  if (typeof format === 'string' || format instanceof String) {\n    // Apply CSS class\n    addClass(shape, format); \n  } else if (format.nodeType === Node.ELEMENT_NODE) {\n    appendFormatterEl(format, shape);\n  } else {\n    const { className, style, element } = format;\n\n    if (className)\n      addClass(shape, className);\n\n    if (style) {\n      const outer = shape.querySelector('.a9s-outer');\n      const inner = shape.querySelector('.a9s-inner');\n\n      if (outer && inner) {\n        outer.setAttribute('style', 'display:none');\n        inner.setAttribute('style', style);\n      } else {\n        shape.setAttribute('style', style);\n      }\n    }\n\n    if (element)\n      appendFormatterEl(element, shape);\n\n    for (const key in format) {\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n        shape.setAttribute(key, format[key]);\n      }\n    }\n  }\n}\n\nexport const setFormatterElSize = (group, x, y, w, h) => {\n  const formatterEl = group.querySelector('.a9s-formatter-el');\n\n  if (formatterEl) {\n    formatterEl.setAttribute('x', x);\n    formatterEl.setAttribute('y', y);\n    formatterEl.setAttribute('width', w);\n    formatterEl.setAttribute('height', h);\n  }\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getCircleSize, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * An editable circle shape.\n */\nexport default class EditableCircle extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <circle class=\"a9s-outer\" ... />\n    //     <circle class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable circle compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawEmbeddedSVG(annotation);\n    this.circle.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.circle));\n\n    this.mask = new Mask(env.image, this.circle);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = circle + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.circle);    \n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    this.handles = [\n      [ cx, cy - r ],\n      [ cx + r, cy ],\n      [ cx, cy + r ],\n      [ cx - r, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.circle, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, r) => {\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - r);\n    this.setHandleXY(topright, cx + r, cy);\n    this.setHandleXY(bottomright, cx, cy + r);\n    this.setHandleXY(bottomleft, cx - r, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var width = 0;\n    var height = 0;\n    var r;\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n      height = mouseY - anchor.y;\n      r = Math.abs(height) / 2;\n    } else {\n      mouseY = anchor.y;\n      width = mouseX - anchor.x;\n      r = Math.abs(width) / 2;\n    }\n\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - r);\n      this.setHandleXY(this.handles[idx2], cx, cy + r);\n      this.setHandleXY(this.handles[1], cx + r, cy);\n      this.setHandleXY(this.handles[3], cx - r, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + r, cy);\n      this.setHandleXY(this.handles[idx1], cx - r, cy);\n      this.setHandleXY(this.handles[0], cx, cy - r);\n      this.setHandleXY(this.handles[2], cx, cy + r);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n    \n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getCircleSize(this.circle);\n    \n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.circle) {\n        const { r } = getCircleSize(this.circle);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - r);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - r);\n\n        this.setSize(cx, cy, r); \n        this.emit('update', toSVGTarget(this.circle, this.env.image)); \n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n        this.emit('update', toSVGTarget(this.circle, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandCircle from './RubberbandCircle';\nimport EditableCircle from './EditableCircle';\n\n/**\n * A rubberband selector for circle selections.\n */\nexport default class RubberbandCircleTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandCircle(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableCircle(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandCircleTool.identifier = 'circle';\n\nRubberbandCircleTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<circle/g);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\nconst setXYR = (shape, x, y, rx, ry) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('rx', rx);\n  shape.setAttribute('ry', ry);\n}\n\n/** \n * Draws an SVG ellipse, either from an annotation, or an\n * (cx, cy, rx, ry)-tuple.\n */\nexport const drawEllipse = (cx, cy, rx, ry) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const innerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n  const outerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n  innerEllipse.setAttribute('class', 'a9s-inner');\n  setXYR(innerEllipse, cx, cy, rx, ry);\n\n  outerEllipse.setAttribute('class', 'a9s-outer');\n  setXYR(outerEllipse, cx, cy, rx, ry);\n\n  g.appendChild(outerEllipse);\n  g.appendChild(innerEllipse);\n\n  return g;\n}\n\nexport const setEllipseSize = (g, cx, cy, rx, ry) => {\n  const innerEllipse = g.querySelector('.a9s-inner');\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  setXYR(innerEllipse, cx, cy, rx, ry);\n  setXYR(outerEllipse, cx, cy, rx, ry);\n}\n\nexport const getEllipseSize = g => {\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerEllipse.getAttribute('cx'));\n  const cy = parseFloat(outerEllipse.getAttribute('cy'));\n  const rx = parseFloat(outerEllipse.getAttribute('rx'));\n  const ry = parseFloat(outerEllipse.getAttribute('ry'));\n  \n  return { cx, cy, rx, ry };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getEllipseSize } from './Ellipse';\n\nexport default class EllipseMask {\n\n  constructor(imageDimensions, ellipse) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.ellipse = ellipse;\n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawEllipse, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * A 'rubberband' selection tool for creating a ellipse by\n * clicking and dragging.\n */\nexport default class RubberbandEllipse {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\n    this.ellipse.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.ellipse);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.ellipse;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const rx = Math.abs(w / 2);\n    const ry = Math.abs(h / 2);\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.ellipse.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.ellipse = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getEllipseSize, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * An editable ellipse shape.\n */\nexport default class EditableEllipse extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <ellipse class=\"a9s-outer\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable ellipse compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEmbeddedSVG(annotation);\n    this.ellipse.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.ellipse));\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = ellipse + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.ellipse);    \n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    this.handles = [\n      [ cx, cy - ry ],\n      [ cx + rx, cy ],\n      [ cx, cy + ry ],\n      [ cx - rx, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.ellipse, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, rx, ry) => {\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - ry);\n    this.setHandleXY(topright, cx + rx, cy);\n    this.setHandleXY(bottomright, cx, cy + ry);\n    this.setHandleXY(bottomleft, cx - rx, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, leftHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n    const anchorLeft = this.getHandleXY(leftHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var rx = 0;\n    var ry = 0;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n    } else {\n      mouseY = anchor.y;\n    }\n\n    const width = mouseX - anchor.x;\n    const height = mouseY - anchor.y;\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n    var rx = w/2;\n    var ry = h/2;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      rx = Math.abs(anchor.x - anchorLeft.x);\n    } else {\n      ry = Math.abs(anchor.y - anchorLeft.y);\n    }\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - ry);\n      this.setHandleXY(this.handles[idx2], cx, cy + ry);\n      this.setHandleXY(this.handles[1], cx + rx, cy);\n      this.setHandleXY(this.handles[3], cx - rx, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + rx, cy);\n      this.setHandleXY(this.handles[idx1], cx - rx, cy);\n      this.setHandleXY(this.handles[0], cx, cy - ry);\n      this.setHandleXY(this.handles[2], cx, cy + ry);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n\n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getEllipseSize(this.ellipse);\n\n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.ellipse) {\n        const { rx, ry } = getEllipseSize(this.ellipse);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - rx);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - ry);\n\n        this.setSize(cx, cy, rx, ry); \n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n        const leftHandle = this.handles[(handleIdx + 3) % 4];\n\n        this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandEllipse from './RubberbandEllipse';\nimport EditableEllipse from './EditableEllipse';\n\n/**\n * A rubberband selector for ellipse selections.\n */\nexport default class RubberbandEllipseTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandEllipse(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableEllipse(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandEllipseTool.identifier = 'ellipse';\n\nRubberbandEllipseTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<ellipse/g);\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\n/**\n * A 'rubberband' selection tool for creating freehand drawing by\n * clicking and dragging.\n */\nexport default class RubberbandFreehand {\n\n  constructor(anchor, g, env) {\n    this.points = [ anchor ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.freehand = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.freehand.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.freehand.appendChild(this.outer);\n    this.freehand.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n   // TODO optional: mask to dim the outside area\n   // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.freehand);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var str = points.map(pt => `L${pt[0]} ${pt[1]}`).join(' ');\n    str = 'M' + str.substring(1);\n    this.outer.setAttribute('d', str);\n    this.inner.setAttribute('d', str);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    //TODO optional: edge smoothing\n\n    this.addPoint(xy);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  addPoint = xy => {\n    this.points = [ ...this.points, xy ];\n    this.setPoints(this.points);   \n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  get element() {\n    return this.freehand;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.freehand = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\nconst getPoints = shape => {\n  const pointList = shape.querySelector('.a9s-inner').getAttribute('d').split('L');\n  const points = [];\n  if(pointList.length > 0) {\n    var point = pointList[0].substring(1).trim().split(' ');\n    points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n\n    for (let i = 1; i < pointList.length; i++) {\n      var point = pointList[i].trim().split(' ');\n      points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n    }\n  }\n\n  return points;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditableFreehand extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num => Math.round(10 * num) / 10;\n\n    var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const updatedPoints = getPoints(this.shape).map(pt => ({ x: pt.x + dx, y: pt.y + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandFreehand from './RubberbandFreehand';\nimport EditableFreehand from './EditableFreehand';\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class RubberbandFreehandTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y) => {\n    this.onDblClick(x, y);\n  }\n\n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    this.detachListeners();\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth || height >= minHeight) {\n\n      const shape = this.rubberband.element;\n      shape.annotation = this.rubberband.toSelection();\n\n      this.emit('complete', shape);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation =>\n    new EditableFreehand(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandFreehandTool.identifier = 'freehand';\n\nRubberbandFreehandTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<path/g);\n}","import RubberbandCircleTool from './circle/RubberbandCircleTool';\nimport RubberbandEllipseTool from './ellipse/RubberbandEllipseTool';\nimport RubberbandFreehandTool from './freehand/RubberbandFreehandTool';\n\nconst SelectorPack = (anno, config) => {\n\n  anno.addDrawingTool(RubberbandCircleTool);\n  anno.addDrawingTool(RubberbandEllipseTool);\n  anno.addDrawingTool(RubberbandFreehandTool);\n  \n}\n\nexport default SelectorPack;"],"sourceRoot":""}