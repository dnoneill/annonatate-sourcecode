from iiif.static import IIIFStatic
from IIIFpres import iiifpapi3
from PIL import Image
import os
from pdf2image import convert_from_path
from iiif_prezi.factory import ManifestFactory
import yaml

files = replacewithfilelist
manifestlabel = '''replacewithlabel'''
dst = os.path.join('img/derivatives/iiif/', 'replacewithfolder') + '/'
baseurl = os.path.join('replacewithoriginurl', dst)
data = []
allfiles = []
for idx, filedict in enumerate(files):
    file = filedict[0]
    filepath,ext = file.rsplit('.', 1)
    if ext == 'pdf':
        images = convert_from_path(file)
        for i in range(len(images)):
            imagefilename = filepath + '-' + str(i) +'.jpg'
            images[i].save(imagefilename, 'JPEG')
            allfiles.append([imagefilename, filedict[1]])
        os.remove(file)
    elif ext != 'jpg' and ext != 'jpeg':
        os.system('convert {} {}.jpg'.format(file, filepath))
        allfiles.append(('%s.jpg'%filepath, filedict[1]))
        os.remove(file)
    else:
        allfiles.append(filedict)

for filedict in allfiles:
    file = filedict[0]
    filepath,ext = file.rsplit('.', 1)
    filename = os.path.basename(filepath)
    if ext != 'jpg' and ext != 'jpeg':
        os.system('convert {} {}.jpg'.format(file, filepath))
    sg = IIIFStatic(prefix=baseurl, dst=dst)
    sggenerate = sg.generate(file)
    img = Image.open(file)
    data.append((filename, img.width, img.height, os.path.join(baseurl, filename),'/full/full/0/default.jpg', filedict[1]))
    iiiffulldir = os.path.join(dst, filename, 'full/full')
    if not os.path.isdir(iiiffulldir):
        os.mkdir(iiiffulldir)
        iiiffulldir = os.path.join(iiiffulldir, '0')
        os.mkdir(iiiffulldir)
    else:
        iiiffulldir = os.path.join(iiiffulldir, '0')
    os.system('mv {} {}'.format(file, os.path.join(iiiffulldir, 'default.jpg')))
replacewithManifestCode
